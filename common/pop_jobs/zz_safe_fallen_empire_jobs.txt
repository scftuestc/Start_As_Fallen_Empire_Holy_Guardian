## 原版堕落的岗位不做改动，加前缀safe重写
## possible 中均做了限制，只有初始物种才能从事，符合条件的可以按权重转职
## 转职后不一定有新的产出，可能只是名字和描述改变

# 对应于普通帝国的政客
safe_fe_sky_cardinal = {
    category = precursor_archon
    is_capped_by_modifier = yes

    swappable_data = {
        default = {
            condition_string = RULER_JOB_TRIGGER
            icon = high_priest
            building_icon = building_palace
        }
        # 转职与相应权重比例
        swap_type = {
            trigger = {
                politician_is_noble = yes
            }
            name = noble
            icon = noble
            desc = job_noble_desc
            weight = 10
        }
        swap_type = {
            trigger = {
                politician_is_merchant = yes
            }
            name = merchant
            icon = merchant
            desc = job_merchant_desc
            weight = 10
        }
        swap_type = {
            trigger = {
                politician_is_planetary_warden = yes
            }
            name = warden
            icon = enforcer
            desc = job_warden_desc
            weight = 15
        }
    }


    tags = { amenities unity}

    possible_pre_triggers = {
        has_owner = yes
        is_enslaved = no
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_precursor_job

    possible = {
        owner = {
            has_ethic = ethic_fanatic_spiritualist
            is_ai = no
        }
        is_same_species = owner
    }

    resources = {
        # 产出受到planet_politicians的修正影响
        category = planet_politicians
        # 基本产出
        produces = {
            unity = 10
            trade = 3
            society_research = 3
        }
        # 通过国策转变为商人后的产出
        produces = {
            trigger = {
                exists = planet
                planet = {
                    OR = {
                        politician_is_merchant = yes
                        politician_is_augmentation_merchant = yes
                    }
                }
            }
            unity = -5
            trade = 7
        }

        upkeep = {
            consumer_goods = 3
            rare_crystals = 2
        }
    }

    planet_modifier = {
        planet_stability_add = 10
        pop_government_ethic_attraction = 0.2
    }

    triggered_planet_modifier = {
        potential = {
            always = yes
        }
        planet_amenities_add = 800
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }


    weight = {
        weight = @ruler_job_weight

        mult = value:job_weights_modifier|JOB|safe_fe_sky_cardinal|RESOURCE|unity|
        mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|

        modifier = {
            factor = 0
            exists = owner
            owner = { is_ai = yes }
        }
        modifier = {
            factor = 0.1
            has_citizenship_rights = no
            NOT = { has_trait = trait_mechanical }
        }
        # crisis purge
        modifier = {
            factor = 0.01
            exists = planet
            exists = planet.controller
            planet.controller = {
                OR = {
                    is_country_type = swarm
                    is_country_type = ai_empire
                }
            }
        }
    }

    inline_script = "jobs/automodding_priority_charisma"

    # 人口晋升
    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = precursor_archon
                AMOUNT = local_pop_amount
            }
        }
    }
}

# 对应于普通帝国的执法者，在堕落里从专家层拉到精英层了
safe_fe_protector = {
    category = precursor_archon

    swappable_data = {
        default = {
            condition_string = RULER_JOB_TRIGGER
            icon = enforcer
            building_icon = building_fe_stronghold
        }
    }

    tags = { crime enforcer soldier }

    possible_pre_triggers = {
        has_owner = yes
        is_enslaved = no
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_precursor_job

    possible = {
        owner = {
            has_ethic = ethic_fanatic_spiritualist
            is_ai = no
        }
        is_same_species = owner
    }

    resources = {
        category = planet_enforcers
        produces = {
            unity = 10
        }
        upkeep = {
            consumer_goods = 1
        }
    }

    planet_modifier = {
        planet_crime_add = -50
        planet_defense_armies_add = 4
        planet_stability_add = 2
    }

    inline_script = "jobs/job_enforcer_additional_modifiers"

    weight = {
        weight = @ruler_job_weight

        modifier = {
            factor = 0
            exists = owner
            owner = { is_ai = yes }
        }
        # 当帝国中存在初始物种的亚种时，有这些特质的物种选择该岗位的权重会更高
        modifier = {
            factor = 2
            has_trait = trait_presapient_earthbound
        }
        modifier = {
            factor = 1.1
            has_trait = trait_limited_regeneration
        }
        modifier = {
            factor = 2
            has_trait = trait_resilient
        }
        modifier = {
            factor = 2
            has_trait = trait_very_strong
        }
        modifier = {
            factor = 1.5
            has_trait = trait_strong
        }
        # crisis purge
        modifier = {
            factor = 0.01
            exists = planet
            exists = planet.controller
            planet.controller = {
                OR = {
                    is_country_type = swarm
                    is_country_type = ai_empire
                }
            }
        }
    }
    # 人口晋升
    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = precursor_archon
                AMOUNT = local_pop_amount
            }
        }
    }
}

# 对应于普通帝国的灵能使
safe_fe_augur = {
    category = precursor_artisan
    is_capped_by_modifier = yes

    swappable_data = {
        default = {
            condition_string = SPECIALIST_JOB_TRIGGER
            building_icon = building_empyrean_shrine
            icon = telepath
        }
        # 转职
        swap_type = {
            trigger = {
                enforcer_is_educator_trigger = yes
            }
            name = educator_telepath
            desc = educator_telepath
            icon = telepath
            building_icon = building_psi_corps
            condition_string = SPECIALIST_JOB_TRIGGER
            weight = 10
        }
    }

    tags = { crime enforcer unity telepath }

    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_precursor_job

    possible = {
        owner = {
            has_ethic = ethic_fanatic_spiritualist
            is_ai = no
        }
        OR = {
            has_trait = trait_latent_psionic
            has_trait = trait_psionic
        }
        is_same_species = owner
    }

    triggered_planet_modifier = {
        potential = { always = yes }
        planet_crime_add = -10
        planet_defense_armies_add = 4
    }

    resources = {
        category = planet_telepaths
        produces = {
            unity = 20
        }
        produces = {
            trigger = {
                exists = owner
                owner = { has_active_tradition = tr_domination_judgment_corps }
            }
            unity = 1
        }
        # 与虚境通信签订契约后的加成
        produces = {
            trigger = {
                exists = owner
                owner = { has_country_flag = whisperers_covenant_confirmed }
            }
            physics_research = 3
            engineering_research = 3
            society_research = 3
        }
        produces = {
            trigger = {
                exists = owner
                owner = { has_country_flag = whisperers_covenant_rank_1 }
            }
            physics_research = 3
            engineering_research = 3
            society_research = 3
        }
        upkeep = {
            energy = 1
            sr_zro = 0.5
        }
        upkeep = {
            trigger = {
                exists = planet
                planet = { has_modifier = anticrime_campaign }
            }
            energy = 2
        }
    }

    inline_script = "jobs/job_enforcer_additional_modifiers"
    inline_script = "jobs/job_telepath_additional_modifiers"

    weight = {
        weight = @specialist_job_weight

        mult = 2
        mult = value:job_weights_modifier|JOB|safe_fe_augur|RESOURCE|unity|

        modifier = {
            factor = 0.1
            has_citizenship_rights = no
        }
        # crisis purge
        modifier = {
            factor = 0.01
            exists = planet
            exists = planet.controller
            planet.controller = {
                OR = {
                    is_country_type = swarm
                    is_country_type = ai_empire
                }
            }
        }
    }

    inline_script = "jobs/automodding_priority_unity"
}

# 对应于普通帝国的工匠，原版为圣卫中失业人群加入的工作岗位
safe_fe_acolyte_artisan = {
    category = precursor_artisan
    is_capped_by_modifier = yes

    swappable_data = {
        default = {
            condition_string = SPECIALIST_JOB_TRIGGER
            building_icon = building_affluence_center
            icon = artisan
        }
        # 转职
        swap_type = {
            trigger = {
                artisan_is_artificer_trigger = yes
            }
            name = artificer
            desc = artificer
            icon = artificer
            weight = 5
        }
        swap_type = {
            trigger = {
                artisan_is_pearl_diver_trigger = yes
            }
            name = pearl_diver
            desc = pearl_diver
            icon = pearl_diver
            building_icon = building_food_processing_facility
            weight = 5
        }
        swap_type = {
            trigger = {
                artisan_is_artificer_trigger = yes
                artisan_is_pearl_diver_trigger = yes
            }
            name = pearl_crafter
            desc = pearl_crafter
            icon = pearl_diver
            building_icon = building_food_processing_facility
            weight = 10
        }
    }

    tags = { consumer_goods }

    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_precursor_job

    possible = {
        owner = {
            has_ethic = ethic_fanatic_spiritualist
            is_ai = no
        }
        is_same_species = owner
    }

    triggered_planet_modifier = {
        potential = {
            always = yes
        }
        planet_amenities_add = 300
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    resources = {
        category = planet_jobs
        produces = {
            consumer_goods = 12
            trade = 1
        }
        produces = {
            trigger = {
                planet = { has_active_building = building_factory_2 }
            }
            consumer_goods = 1
        }
        produces = {
            trigger = {
                planet = { has_active_building = building_factory_3 }
            }
            consumer_goods = 2
        }
        # 转职为熟练技工后的产出
        produces = {
            trigger = {
                artisan_is_artificer_trigger = yes
            }
            consumer_goods = 2
            trade = 2
        }
        # 转职为珍珠潜水员后的产出
        produces = {
            trigger = {
                exists = planet
                planet = {
                    artisan_is_pearl_diver_trigger = yes
                }
            }
            trade = 2
        }
        produces = {
            trigger = {
                exists = planet
                planet = {
                    artisan_is_pearl_diver_trigger = yes
                }
                has_councilor = { COUNCILOR = "councilor_anglers" }
            }
            consumer_goods = @councilor_anglers_pearl_diver_consumer_goods_bonus
            mult = value:councilor_level|TYPE|councilor_anglers|
        }
        produces = {
            trigger = {
                exists = planet
                planet = {
                    artisan_is_pearl_diver_trigger = yes
                }
                has_councilor = { COUNCILOR = "councilor_machine_anglers" }
            }
            consumer_goods = @councilor_machine_anglers_pearl_diver_consumer_goods_bonus
            mult = value:councilor_level|TYPE|councilor_machine_anglers|
        }
        produces = {
            trigger = {
                exists = planet
                planet = {
                    artisan_is_pearl_diver_trigger = yes
                }
                has_councilor = { COUNCILOR = "councilor_machine_anglers" }
            }
            consumer_goods = @councilor_machine_anglers_pearl_diver_consumer_goods_bonus
            mult = value:councilor_level|TYPE|councilor_machine_anglers|
        }
        # 采用催化加工国策后的产出
        produces = {
            trigger = {
                industrial_jobs_are_catalytic_trigger = yes
            }
            consumer_goods = 1.5
        }
        upkeep = {
            trigger = {
                industrial_jobs_are_catalytic_trigger = no
            }
            minerals = 6
        }
        upkeep = {
            trigger = {
                industrial_jobs_are_catalytic_trigger = yes
            }
            food = 9
        }
        upkeep = {
            trigger = {
                industrial_jobs_are_catalytic_trigger = yes
                exists = planet
                planet = {
                    artisan_is_pearl_diver_trigger = yes
                }
            }
            minerals = 2
            food = -3
        }
        # 附庸状态下的产出？
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_produce_requisitorium
                    exists = owner.overlord
                    owner.overlord = { country_uses_consumer_goods = yes }
                }
            }
            consumer_goods = @requisitorium_consumer_goods_reduction
        }
        upkeep = {
            trigger = {
                planet = {
                    has_planet_flag = has_produce_requisitorium
                    exists = owner.overlord
                    owner.overlord = { country_uses_consumer_goods = yes }
                }
            }
            minerals = 1
        }
        upkeep = {
            trigger = {
                industrial_jobs_are_catalytic_trigger = yes
                planet = {
                    has_planet_flag = has_produce_requisitorium
                    exists = owner.overlord
                    owner.overlord = { country_uses_consumer_goods = yes }
                }
            }
            food = 1.5
        }
        inline_script = "output/factory_output"
    }

    overlord_resources = {
        category = planet_requisitioned_consumer_goods
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_produce_requisitorium
                    exists = owner.overlord
                    owner.overlord = { country_uses_consumer_goods = yes }
                }
            }
            consumer_goods = @requisitorium_consumer_goods_overlord
        }
    }

    triggered_planet_modifier = {
        potential = {
            artisan_is_pearl_diver_trigger = yes
            exists = owner
            owner = { has_valid_civic = civic_agrarian_idyll }
        }
        planet_amenities_add = 200
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    weight = {
        weight = @specialist_job_weight
        mult = value:job_weights_modifier|JOB|safe_fe_acolyte_artisan|RESOURCE|consumer_goods|

        # low income modifier
        modifier = {
            factor = 1.2
            exists = planet
            planet = {
                has_available_jobs = "artisan"
            }
            exists = owner
            owner = {
                is_ai = yes
                has_monthly_income = {
                    resource = consumer_goods
                    value < 5
                }
            }
        }
        # crisis purge
        modifier = {
            factor = 0.01
            exists = planet
            exists = planet.controller
            planet.controller = {
                OR = {
                    is_country_type = swarm
                    is_country_type = ai_empire
                }
            }
        }
    }

    inline_script = "jobs/automodding_priority_consumer_goods"

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = precursor_artisan
                AMOUNT = local_pop_amount
            }
        }
    }
}

safe_fe_acolyte_generator = {
    category = precursor_warden
    is_capped_by_modifier = yes

    swappable_data = {
        default = {
            condition_string = WORKER_JOB_TRIGGER
            building_icon = building_power_plant
            icon = technician
        }
        swap_type = {
            trigger = {
                technician_is_mote_harvester_trigger = yes
            }
            icon = mote_harvester
            name = mote_harvester
            desc = mote_harvester
            building_icon = building_mote_harvesting_traps
            weight = 20
        }
    }

    tags = { energy }

    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_precursor_job

    possible = {
        owner = {
            has_ethic = ethic_fanatic_spiritualist
            is_ai = no
        }
        is_same_species = owner
    }

    resources = {
        category = planet_technician
        produces = {
            energy = 10
            volatile_motes = 1
        }
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_energy_requisitorium
                }
            }
            energy = @requisitorium_energy_reduction
        }
    }

    overlord_resources = {
        category = planet_requisitioned_energy
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_energy_requisitorium
                }
            }
            energy = @requisitorium_energy_overlord
        }
    }

    weight = {

        weight = @worker_job_weight
        mult = value:job_weights_modifier|JOB|safe_fe_acolyte_generator|RESOURCE|energy|
        # low income modifier
        modifier = {
            factor = 3
            exists = planet
            planet = {
                has_available_jobs = safe_fe_acolyte_generator
            }
            exists = owner
            owner = {
                has_monthly_income = {
                    resource = energy
                    value < 10
                }
            }
        }
        # crisis purge
        modifier = {
            factor = 0.01
            exists = planet
            exists = planet.controller
            planet.controller = {
                OR = {
                    is_country_type = swarm
                    is_country_type = ai_empire
                }
            }
        }
    }

    inline_script = "jobs/automodding_priority_energy"

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = precursor_warden
                AMOUNT = local_pop_amount
            }
        }
    }
}

safe_fe_acolyte_mine = {
    category = precursor_warden
    is_capped_by_modifier = yes

    swappable_data = {
        default = {
            condition_string = WORKER_JOB_TRIGGER
            building_icon = building_fe_mine_2
            icon = miner
        }
        # 转职
        swap_type = {
            trigger = {
                miner_is_scrap_miner_trigger = yes
            }
            name = scrap_miner
            desc = scrap_miner
            weight = 5
        }
        swap_type = {
            trigger = {
                miner_is_cave_cleaner_trigger = yes
            }
            name = cave_cleaner
            desc = cave_cleaner
            weight = 10
        }
        swap_type = {
            trigger = {
                miner_is_mineral_diver_trigger = yes
            }
            name = mineral_diver
            desc = mineral_diver
            weight = 15
        }
        swap_type = {
            trigger = {
                miner_is_turtle_miner_trigger = yes
            }
            name = turtle_miner
            desc = turtle_miner
            weight = 20
        }
        swap_type = {
            trigger = {
                miner_is_crystal_miner_trigger = yes
            }
            icon = crystal_miner
            name = crystal_miner
            desc = crystal_miner
            building_icon = building_crystal_mines
            weight = 20
        }
    }

    tags = { minerals strategic_resource }

    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_precursor_job

    possible = {
        owner = {
            has_ethic = ethic_fanatic_spiritualist
            is_ai = no
        }
        is_same_species = owner
    }

    resources = {
        category = planet_miners
        produces = {
            minerals = 10
            rare_crystals = 1
        }
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_material_requisitorium
                }
            }
            minerals = @requisitorium_minerals_reduction
        }
        # 转职为拆解矿工的产出
        produces = {
            trigger = {
                exists = planet
                planet = {
                    miner_is_scrap_miner_trigger = yes
                }
            }
            minerals = -2
            alloys = 1
        }
        # 转职为洞穴清理者的产出
        produces = {
            trigger = {
                exists = planet
                planet = {
                    miner_is_cave_cleaner_trigger = yes
                }
            }
            minerals = 2
        }
        # 转职为深海潜水员的产出
        produces = {
            trigger = {
                exists = planet
                planet = {
                    miner_is_mineral_diver_trigger = yes
                }
            }
            minerals = -1
            alloys = 1
        }
        # 转职为尼玛矿工的产出
        produces = {
            trigger = {
                exists = planet
                planet = {
                    miner_is_turtle_miner_trigger = yes
                }
            }
            minerals = -1
            food = 3
        }
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_material_requisitorium
                }
            }
            minerals = @requisitorium_minerals_reduction
        }
    }

    triggered_planet_modifier = {
        # Gives some Stability per "Mining Guild" Councilor level.
        potential = {
            has_councilor = { COUNCILOR = "councilor_mining_guilds" }
        }
        planet_stability_add = @councilor_mining_guilds_miner_stability
        mult = value:councilor_level|TYPE|councilor_mining_guilds|
    }

    overlord_resources = {
        category = planet_requisitioned_minerals
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_material_requisitorium
                }
            }
            minerals = @requisitorium_minerals_overlord
        }
    }

    weight = {
        weight = @worker_job_weight
        mult = value:job_weights_modifier|JOB|safe_fe_acolyte_mine|RESOURCE|minerals|

        # low income modifier
        modifier = {
            factor = 3
            exists = planet
            planet = {
                has_available_jobs = miner
            }
            exists = owner
            owner = {
                has_monthly_income = {
                    resource = minerals
                    value < 10
                }
            }
        }
        # crisis purge
        modifier = {
            factor = 0.01
            exists = planet
            exists = planet.controller
            planet.controller = {
                OR = {
                    is_country_type = swarm
                    is_country_type = ai_empire
                }
            }
        }
    }

    inline_script = "jobs/automodding_priority_minerals"

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = precursor_warden
                AMOUNT = local_pop_amount
            }
        }
    }
}

safe_fe_acolyte_farm = {
    category = precursor_warden
    is_capped_by_modifier = yes

    swappable_data = {
        default = {
            condition_string = WORKER_JOB_TRIGGER
            building_icon = building_nourishment_center
            icon = farmer
        }
        # 转职
        swap_type = {
            trigger = {
                farmer_is_titan_hunter_trigger = yes
            }
            name = titan_hunter
            desc = titan_hunter
            icon = hunter_gatherer
            weight = 10
        }
        swap_type = {
            trigger = {
                farmer_is_puddle_technician_trigger = yes
            }
            name = puddle_technician
            desc = puddle_technician
            icon = puddle_technician
            weight = 15
        }
        swap_type = {
            trigger = {
                farmer_is_gas_extractor_trigger = yes
            }
            name = gas_extractor
            desc = gas_extractor
            icon = gas_extractor
            building_icon = building_gas_extractors
            weight = 20
        }
        swap_type = {
            trigger = {
                farmer_is_angler_trigger = yes
            }
            name = angler
            desc = angler
            icon = angler
            weight = 50
        }
    }

    tags = { food }

    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_precursor_job

    possible = {
        owner = {
            has_ethic = ethic_fanatic_spiritualist
            is_ai = no
        }
        is_same_species = owner
    }

    resources = {
        category = planet_farmers
        produces = {
            food = 10
            exotic_gases = 1
        }
        # 转职成巨兽猎手后的产出
        produces = {
            trigger = {
                farmer_is_titan_hunter_trigger = yes
            }
            food = 2
            trade = 8
        }
        # 转职成泥潭技工后的产出
        produces = {
            trigger = {
                farmer_is_puddle_technician_trigger = yes
            }
            alloys = 1
        }
        # 转职成渔夫后的产出
        produces = {
            trigger = {
                exists = planet
                planet = {
                    farmer_is_angler_trigger = yes
                }
            }
            food = 2
            trade = 2
        }
        produces = {
            trigger = {
                exists = planet
                planet = {
                    farmer_is_angler_trigger = yes
                }
                has_councilor = { COUNCILOR = "councilor_anglers" }
            }
            food = @councilor_anglers_angler_food_bonus
            mult = value:councilor_level|TYPE|councilor_anglers|
        }
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_produce_requisitorium
                }
            }
            food = @requisitorium_food_reduction
        }
    }

    overlord_resources = {
        category = planet_requisitioned_food
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_produce_requisitorium
                }
            }
            food = @requisitorium_food_overlord
        }
    }

    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = { has_valid_civic = civic_agrarian_idyll }
        }
        planet_amenities_add = 200
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    weight = {
        weight = @worker_job_weight
        mult = value:job_weights_modifier|JOB|safe_fe_acolyte_farm|RESOURCE|food|

        modifier = {
            factor = 1.1
            owner = { has_valid_civic = civic_agrarian_idyll }
        }
        modifier = {
            factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
            owner = { has_valid_civic = civic_agrarian_idyll }
        }
        # low income modifier
        modifier = {
            factor = 3
            exists = planet
            planet = {
                has_available_jobs = safe_fe_acolyte_farm
            }
            exists = owner
            owner = {
                has_monthly_income = {
                    resource = food
                    value < 10
                }
            }
        }
        # crisis purge
        modifier = {
            factor = 0.01
            exists = planet
            exists = planet.controller
            planet.controller = {
                OR = {
                    is_country_type = swarm
                    is_country_type = ai_empire
                }
            }
        }
    }

    inline_script = "jobs/automodding_priority_food"

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = precursor_warden
                AMOUNT = local_pop_amount
            }
        }
    }
}