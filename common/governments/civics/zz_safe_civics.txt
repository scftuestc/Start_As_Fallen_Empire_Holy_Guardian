#civic_example = {
#	playable = {}									# AND trigger, no scope; use this to prevent the civic from being selectable by the player (UI)
#	potential = {}									# requirements list, see ../readme_requirements.txt
#	possible = {}									# requirements list, see ../readme_requirements.txt
#	pickable_at_start = yes / no					# default: yes
#	modification = {								# ( modification = yes/no) | Can be a set of two triggers:
#		moddable_conditions_custom_tooltip = loc	# Used for localizaton when add or remove is not set but the other one is (replaces CIVIC_NOT_MODDABLE)
#		add = {}									# add to check if can be added later under certain conditions
#		remove = {}									# remove to check if can be removed later under certain conditions
#	}
#
#													# default: yes, set to no to prevent adding or removing this after creation of the empire
#	custom_tooltip_with_modifiers = ...				# Appends localization key to the end of auto-generated modifier effect text.
#
#	random_weight = { base = 5 }					# scriptable weight for randomizing a civic
#													# Note: If omitted, a default weight of 1 is used
#													# Also note: after game start, AI selection of new civics uses the below weight instead
#
#	ai_weight = { base = 5 }						# scriptable weight for AI picking civics in-game (when unlocking a new slot).
#													# Note: If omitted, a default weight of 1 is used. Not needed when "modification = no"
#
#	modifier = {}									# modifier added to the country if the civic is selected and valid
#	hide_modifiers = yes / no						# default: no; if yes will hide the modifiers from the origin/civic tooltip.
#	can_build_ruler_ship = yes / no					# default: no
#	traits = { trait = ... }						# default: empty; trait set to enforce on the primary species. They cannot be removed, but more can be added if points/picks permit
#	has_secondary_species = {						# default: none; if present, will enable secondary species customization in empire designer and will create secondary species & pops at galaxy generation time (see empire_init_create_capital_secondary_pops)
#		traits = { trait = ... }					# default: empty; trait set to enforce on the secondary species. They cannot be removed, but more can be added if points/picks permit
#	}
#	is_origin = yes / no							# default: no, set to yes if civic should be treated as an Origin
#	description = LOC_KEY							# Custom text that will appear under the "Effects" heading.
#	negative_description = LOC_KEY					# Custom text that will appear under the "Penalties" heading.
#   alternate_civic_version = civic_key				# Key of the civic that will try to replace the current one during a government reform if the current civic is locked (ex: corporate version of the civic that will replace it when attempting to reform to Megacorporation)
#													# Note: if no replacement civic is indicated, it fallback to non-moddable civics behaviour, i.e. you can't change authority
#
#	swap_type = {									# triggered name, desc, custom desc and modifiers
#		name = ...
#		description = ...
#		negative_description = ...
#		trigger = {
#			...
#		}
#		modifier = {								# modifier that is applied to the country when triggers are evaluated as true
#			...
#		}
#	}
#	ai_playable = {}								# Similar to "playable", for AI
#	blocks_random_machine_empire_generation	= yes	# ORIGIN EXCLUSIVE: Makes sure that random empire creation does not create invalid combinations with individualistic machines. Defaults to yes. Required for all origins that should be blocked by individualist machines.
#}

#civic_example = {
#	playable = {}								# AND trigger, no scope; use this to prevent the civic from being selectable by the player (UI)
#	potential = {}								# requirements list, see ../readme_requirements.txt
#	possible = {}								# requirements list, see ../readme_requirements.txt
#	pickable_at_start = yes / no				# default: yes
#	modification = { add = {} remove = {} } | yes/no # Can be a set of two triggers, add to check if can be added later under certain conditions, remove to check if can be removed later under certain conditions
#												# default: yes, set to no to prevent adding or removing this after creation of the empire
#	random_weight = { base = 5 }				# scriptable weight for randomizing a civic
#												# Note: If omitted, a default weight of 1 is used
#
#   alternate_civic_version = civic_key			# Key of the civic that will try to replace the current one during a government reform if the current civic is locked (ex: corporate version of the civic that will replace it when attempting to reform to Megacorporation)
#												# Note: if no replacement civic is indicated, it fallback to non-moddable civics behaviour, i.e. you can't change authority
#
#	modifier = {}								# modifier added to the country if the civic is selected and valid
#	can_build_ruler_ship = yes / no				# default: no
#	traits = { trait = ... }					# default: empty; trait set to enforce on the primary species. They cannot be removed, but more can be added if points/picks permit
#	has_secondary_species = {					# default: none; if present, will enable secondary species customization in empire designer and will create secondary species & pops at galaxy generation time (see empire_init_create_capital_secondary_pops)
#		traits = { trait = ... }					# default: empty; trait set to enforce on the secondary species. They cannot be removed, but more can be added if points/picks permit
#	}
#}

## 失落帝国国民理念增强
# AI
civic_lethargic_leadership = {
    modification = no
    icon = "gfx/interface/icons/governments/civics/civic_lethargic_leadership.dds"

    potential = {
        country_type = { value = fallen_empire }
        ethics = { NOT = { value = ethic_gestalt_consciousness } }
    }

    random_weight = { base = @civic_default_random_weight }

    description = FALLEN_EMPIRE_LETHARGY_1
    modifier = {
        leaders_upkeep_mult = -0.25
        starbase_shipyard_build_speed_mult = -10
    }
}

civic_empire_in_decline = {
    modification = no
    icon = "gfx/interface/icons/governments/civics/civic_empire_in_decline.dds"

    potential = {
        country_type = { value = fallen_empire }
        ethics = { NOT = { value = ethic_gestalt_consciousness } }
    }
    random_weight = { base = @civic_default_random_weight }

    description = FALLEN_EMPIRE_LETHARGY_2
    modifier = {
        planet_pops_upkeep_mult = -0.25
        empire_size_penalty_mult = -0.25
        shipsize_starbase_outpost_build_speed_mult = -10
        shipclass_colonizer_build_speed_mult = -10
    }
}

# 玩家
safe_civic_lethargic_leadership = {
    modification = no
    ai_playable = { always = no }
    icon = "gfx/interface/icons/governments/civics/civic_lethargic_leadership.dds"

    potential = {
        origin = { value = Start_As_Fallen_Empire_Holy_Guardians }
        authority = { NOT = { value = auth_corporate } }
        ethics = { NOT = { value = ethic_gestalt_consciousness } }
    }

    random_weight = { base = 0 }
    ai_weight = { base = 0 }

    description = FALLEN_EMPIRE_LETHARGY_1
    modifier = {
        leaders_upkeep_mult = -0.25
        starbase_shipyard_build_speed_mult = -10
    }
}

safe_civic_empire_in_decline = {
    modification = no
    ai_playable = { always = no }
    icon = "gfx/interface/icons/governments/civics/civic_empire_in_decline.dds"

    potential = {
        origin = { value = Start_As_Fallen_Empire_Holy_Guardians }
        authority = { NOT = { value = auth_corporate } }
        ethics = { NOT = { value = ethic_gestalt_consciousness } }
    }

    random_weight = { base = 0 }
    ai_weight = { base = 0 }

    description = FALLEN_EMPIRE_LETHARGY_2
    modifier = {
        planet_pops_upkeep_mult = -0.25
        empire_size_penalty_mult = -0.25
        shipsize_starbase_outpost_build_speed_mult = -10
        shipclass_colonizer_build_speed_mult = -10
    }
}

## 觉醒帝国国民理念增强
# AI
civic_revanchist_fervor = {
    modification = no
    icon = "gfx/interface/icons/governments/civics/civic_revanchist_fervor.dds"

    potential = {
        origin = { NOT = { value = Start_As_Fallen_Empire_Holy_Guardians } }
        country_type = { value = awakened_fallen_empire }
        ethics = { NOT = { value = ethic_gestalt_consciousness } }
    }
    random_weight = { base = @civic_default_random_weight }

    modifier = {
        country_civics_influence_produces_add = 3
        logistic_growth_mult = 0.5
        ship_weapon_damage = 0.5
        planetary_ascension_effect_mult = 0.5
    }
}

civic_ancient_caches_of_technology = {
    modification = no
    icon = "gfx/interface/icons/governments/civics/civic_ancient_caches_of_technology.dds"

    potential = {
        origin = { NOT = { value = Start_As_Fallen_Empire_Holy_Guardians } }
        country_type = { value = awakened_fallen_empire }
        ethics = { NOT = { value = ethic_gestalt_consciousness } }
    }
    random_weight = { base = @civic_default_random_weight }

    modifier = {
        planet_jobs_produces_mult = 0.75
        all_technology_research_speed = 0.75
    }
}

# 玩家
safe_civic_revanchist_fervor = {
    modification = no
    ai_playable = { always = no }
    icon = "gfx/interface/icons/governments/civics/civic_revanchist_fervor.dds"

    potential = {
        origin = { value = Start_As_Fallen_Empire_Holy_Guardians }
        country_type = { value = awakened_fallen_empire }
        ethics = { NOT = { value = ethic_gestalt_consciousness } }
    }

    ai_weight = { base = 0 }
    random_weight = { base = 0 }

    modifier = {
        country_civics_influence_produces_add = 3
        logistic_growth_mult = 0.5
        ship_weapon_damage = 0.5
        planetary_ascension_effect_mult = 0.5
    }
}

safe_civic_ancient_caches_of_technology = {
    modification = no
    icon = "gfx/interface/icons/governments/civics/civic_ancient_caches_of_technology.dds"
    ai_playable = { always = no }

    potential = {
        origin = { value = Start_As_Fallen_Empire_Holy_Guardians }
        country_type = { value = awakened_fallen_empire }
        ethics = { NOT = { value = ethic_gestalt_consciousness } }
    }

    random_weight = { base = 0 }
    ai_weight = { base = 0 }

    modifier = {
        planet_jobs_produces_mult = 0.75
        all_technology_research_speed = 0.75
    }
}