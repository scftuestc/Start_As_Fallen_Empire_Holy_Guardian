namespace = safe_origin_initiallizer

## 国家类型和舰船、城市外观修改
country_event = {
    id = safe_origin_initiallizer.1
    hide_window = yes
    is_triggered_only = yes

    trigger = { has_origin = Start_As_Fallen_Empire_Holy_Guardians }

    immediate = {
        set_country_type = fallen_empire
        if = {
            limit = {
                has_origin =  Start_As_Fallen_Empire_Holy_Guardians
            }
            set_graphical_culture = "safe_fallen_empire_spiritualist"
            set_city_graphical_culture = "safe_fallen_empire_spiritualist"
        }
    }
}

## 首都星系初始化
country_event = {
    id = safe_origin_initiallizer.2
    hide_window = yes
    is_triggered_only = yes

    trigger = { has_origin = Start_As_Fallen_Empire_Holy_Guardians }

    immediate = {
        capital_scope.solar_system = {
            # 天国王座星球绑定
            every_system_planet = {
                limit = { has_planet_flag = fallen_empire_spiritualist_capital}
                set_owner = root
                set_controller = root
                set_capital = yes
                set_name = "NAME_Celestial_Throne"
                # 洗一遍球，不然会有奇怪的bug，蠢驴error.log中未报告原因
                reroll_deposits = yes
                remove_all_buildings = yes
                remove_all_districts = yes
                clear_blockers = yes
                # 为该行星添加深空擎天堡 + 4个防御平台
                create_fe_dsc = {
                    OWNER = root
                    DESIGN = "NAME_FE_SPIRITUALIST_Citadel_3"
                }
                # 循环添加16个城市区划
                while = {
                    count = 16
                    add_district = district_city
                }
                # 循环添加2个发电区划，并依据需要判断是否需要增加发电区划数上限和星球大小（即保证至少有2个发电区划）
                while = {
                    count = 2
                    add_district_and_planet_size_if_needed_effect = {
                        district = district_generator
                    }
                }
                # 添加发电区划并特化为能源发电
                add_zone = {
                    district = district_generator
                    zone = zone_energy
                }
                # 循环添加6个采矿区划，并依据需要判断是否需要增加发电区划数上限和星球大小（即保证至少有6个采矿区划）
                while = {
                    count = 6
                    add_district_and_planet_size_if_needed_effect = {
                        district = district_mining
                    }
                }
                # 添加采矿区划并特化为矿物提取
                add_zone = {
                    district = district_mining
                    zone = zone_minerals
                }
                # 循环添加6个农业区划，并依据需要判断是否需要增加农业区划数上限和星球大小（即保证至少有6个采矿区划）
                while = {
                    count = 6
                    add_district_and_planet_size_if_needed_effect = {
                        district = district_farming
                    }
                }
                # 添加农业区划并特化为食物聚焦
                add_zone = {
                    district = district_farming
                    zone = zone_food
                }
                # 循环添加115个堕落帝国原生物种人口组（11.5K）
                while = {
                    count = 115
                    create_pop_group = {
                        species = owner_main_species
                    }
                }
                # 创建初始海军
                create_fallen_empire_starting_navy = yes
                # 循环添加20个灵能部队陆军
                while = {
                    count = 20
                    create_army = {
                        name = random
                        owner = root
                        species = root
                        type = "psionic_army"
                    }
                }
                # 为城市核心添加建筑
                add_building = building_ancient_palace
                add_building = building_fe_dome
                add_building = building_fe_dome
                add_building = building_fe_temple_2
                add_building = building_fe_temple_2
                add_building = building_fe_mine_2
                add_building = building_fe_stronghold
                add_building = building_fe_stronghold
                add_building = building_dimensional_fabricator
                add_building = building_affluence_center
                add_building = building_nano_forge
                # 为能源发电区划添加建筑
                add_building = {
                    zone = zone_energy
                    building = building_class_4_singularity
                }
                # 为矿物提取区划添加建筑
                add_building = {
                    zone = zone_minerals
                    building = building_fe_mine_2
                }
            }
            # 天之殿绑定
            every_system_planet = {
                limit = { has_planet_flag = fallen_empire_spiritualist_sky_temple}
                set_owner = root
                set_controller = root
                # 为该行星添加深空擎天堡+ 4个防御平台
                create_fe_dsc = {
                    OWNER = root
                    DESIGN = "NAME_FE_SPIRITUALIST_Citadel_3"
                }
                # 循环添加12个城市区划
                while = {
                    count = 12
                    add_district = district_city
                }
                # 循环添加2个农业区划，并依据需要判断是否需要增加农业区划数上限和星球大小（即保证至少有2个采矿区划）
                while = {
                    count = 2
                    add_district_and_planet_size_if_needed_effect = {
                        district = district_generator
                    }
                }
                add_zone = {
                    district = district_generator
                    zone = zone_energy
                }
                # 循环添加5个农业区划，并依据需要判断是否需要增加农业区划数上限和星球大小（即保证至少有5个采矿区划）
                while = {
                    count = 5
                    add_district_and_planet_size_if_needed_effect = {
                        district = district_mining
                    }
                }
                add_zone = {
                    district = district_mining
                    zone = zone_minerals
                }
                # 循环添加5个农业区划，并依据需要判断是否需要增加农业区划数上限和星球大小（即保证至少有5个采矿区划）
                while = {
                    count = 5
                    add_district_and_planet_size_if_needed_effect = {
                        district = district_farming
                    }
                }
                add_zone = {
                    district = district_farming
                    zone = zone_food
                }
                # 循环添加68个堕落帝国原生物种人口组（6.8K）
                while = {
                    count = 68
                    create_pop_group = {
                        species = owner_main_species
                    }
                }
                # 为城市核心添加建筑
                add_building = building_ancient_palace
                add_building = building_empyrean_shrine
                add_building = building_fe_dome
                add_building = building_dimensional_fabricator
                add_building = building_dimensional_fabricator
                add_building = building_fe_stronghold
                add_building = building_nano_forge
                add_building = building_nano_forge
                # 为能源发电区划添加建筑
                add_building = {
                    zone = zone_energy
                    building = building_class_4_singularity
                }
                # 为矿物提取区划添加建筑
                add_building = {
                    zone = zone_minerals
                    building = building_fe_mine_2
                }
            }
            # 首都星港修正
            every_starbase_in_system = {
                limit = {
                    has_starbase_size = starbase_starport
                }
                set_starbase_size = starbase_citadel
            }
        }
    }
}

## 相邻殖民地星系初始化
country_event = {
    id = safe_origin_initiallizer.3
    hide_window = yes
    is_triggered_only = yes

    trigger = { has_origin = Start_As_Fallen_Empire_Holy_Guardians }

    immediate = {
        # 中间层殖民地
        every_system = {
            limit = {
                NOT = { exists = space_owner }
                has_star_flag = fallen_empire_orbitals_system_1
            }
            create_fe_citadel = yes
            random_system_planet = {
                limit = {
                    is_ideal_planet_class = {
                        who = ROOT
                        status = yes
                    }
                    is_colony = no
                }
                create_fe_spiritualist_fringe_colony = yes
                set_owner = root
                set_controller = root
            }
        }
        every_system = {
            limit = {
                NOT = { exists = space_owner }
                has_star_flag = fallen_empire_orbitals_system_2
            }
            create_fe_citadel = yes
            random_system_planet = {
                limit = {
                    is_ideal_planet_class = {
                        who = ROOT
                        status = yes
                    }
                    is_colony = no
                }
                create_fe_spiritualist_fringe_colony = yes
                set_owner = root
                set_controller = root
            }
        }
        # 外层殖民地
        every_system = {
            limit = {
                NOT = { exists = space_owner }
                has_star_flag = fallen_empire_col_system_1
            }
            create_fe_citadel = yes
            every_system_planet = {
                limit = {
                    NOT = { exists = owner }
                    has_planet_flag = fallen_empire_random_colony_1
                }
                create_fe_spiritualist_fringe_colony = yes
                set_owner = root
                set_controller = root
            }
        }
        every_system = {
            limit = {
                NOT = { exists = space_owner }
                has_star_flag = fallen_empire_col_system_2
            }
            create_fe_citadel = yes
            every_system_planet = {
                limit = {
                    NOT = { exists = owner }
                    has_planet_flag = fallen_empire_random_colony_2
                }
                create_fe_spiritualist_fringe_colony = yes
                set_owner = root
                set_controller = root
            }
        }
    }
}

## 杂项调整
country_event= {
    id = safe_origin_initiallizer.4
    hide_window = yes
    is_triggered_only = yes

    trigger = { has_origin = Start_As_Fallen_Empire_Holy_Guardians }
    # 科技调整
    immediate = {
        # 缺失的巨像科技补充（需要有启示录DLC）
        give_colossus_tech = yes
        # 缺失的十层循环补充
        give_repeatable_tech = yes
        # 缺失的物理学科技补充
        give_technology = { tech = tech_archeology_lab_ancrel message = no}
        give_technology = { tech = tech_combat_computers_autonomous message = no }
        # 缺失的社会学科技补充
        ## 博物天枢用修复巨构事件链开始获得？
        give_technology = { tech = tech_adaptive_combat_algorithms message = no }  # 初始物种为机器人才能有的
        give_technology = { tech = tech_biomechanics message = no } # 初始物种为机器人才能有的
        give_technology = { tech = tech_psi_jump_drive_1 message = no }
        give_technology = { tech = tech_psionic_barrier message = no }
        give_technology = { tech = tech_psionic_shield message = no}
        # 缺失的工程学科技补充
        give_technology = { tech = tech_micro_replicators message = no } # 初始物种为机器人才能有的
        give_technology = { tech = tech_self_assembling_components message = no } # 初始物种为机器人才能有的
        # 殖民地与舰船调整
        every_owned_planet = {
            if = {
                limit = {
                    is_colony = yes
                    is_capital = yes
                }
                set_colony_type = col_fe_capital
            }
            if = {
                limit = {
                    is_colony = yes
                    is_capital = no
                }
                set_colony_type = col_fe_colony
            }
        }
        every_owned_fleet = {
            # 删掉科研和工程船，后续用事件给
            if = {
                limit = {
                    OR = {
                        is_ship_class = shipclass_constructor
                        is_ship_class = shipclass_science_ship
                    }
                }
                delete_fleet = this
            }
            # 删掉初始给的3个护卫舰的小舰队
            if = { limit = { fleet_size = 3 } delete_fleet = this }
        }
        add_modifier = { modifier = fe_ship_cost_modifier }
    }
}